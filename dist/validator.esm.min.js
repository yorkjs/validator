const{toString:t}=Object.prototype;function e(e){return t.call(e).toLowerCase().slice(8,-1)}function n(t){return!(!t||"object"!==e(t))}function i(t,n){if(!Array.isArray(n))return"type";const{length:i}=n;if(void 0!==t.min&&i<t.min)return"min";if(void 0!==t.max&&i>t.max)return"max";const{itemType:r}=t;if(r)for(let t=0;t<i;t++)if(e(n[t])!==r)return"itemType"}function r(t,e){return"boolean"!=typeof e?"type":void 0!==t.value&&t.value!==e?"value":void 0}function s(t,e){if("string"!=typeof e)return"type";if(""===e){if(!0===t.empty)return;return"empty"}if(void 0!==t.min&&e.length<t.min)return"min";if(void 0!==t.max&&e.length>t.max)return"max";if(void 0!==t.pattern&&!t.pattern.test(e))return"pattern";if(void 0!==t.custom){const n=t.custom(e);if(n)return n}}const o=/^\d{4}\-\d{2}\-\d{2}$/;function a(t,e){const n={};return Object.assign(n,t),Object.assign(n,{type:"string",pattern:o}),s(n,e)}const u=/^\d{4}\-\d{2}\-\d{2} \d{2}:\d{2}:\d{2}$/;function c(t,e){const n={};return Object.assign(n,t),Object.assign(n,{type:"string",pattern:u}),s(n,e)}function f(t,e){if(!Array.isArray(t.values)||t.values.indexOf(e)<0)return"type"}function m(t,e){return"number"!=typeof e||e%1!=0?"type":void 0!==t.min&&e<t.min?"min":void 0!==t.max&&e>t.max?"max":void 0}function p(t,e){if("number"!=typeof e||isNaN(e))return"type";if(void 0!==t.min&&e<t.min)return"min";if(void 0!==t.max&&e>t.max)return"max";if(void 0!==t.precision){const n=(""+e).split(".");if(2===n.length&&n[1].length>t.precision)return"precision"}}function d(t,e){if(!n(e))return"type"}class y{constructor(){this.rules={int:m,integer:m,number:p,string:s,bool:r,boolean:r,enum:f,array:i,object:d,date:a,dateTime:c},this.messages={}}add(t,e,i){n(t)?(Object.assign(this.rules,t),n(e)&&Object.assign(this.messages,e)):(this.rules[t]=e,this.messages[t]=i)}validate(t,i,r){let s;for(let o in i){const a=i[o];let u,c;switch(e(a)){case"string":u={type:a};break;case"array":u={type:"enum",values:a};break;case"regexp":u={type:"string",pattern:a};break;default:u=a}if(!n(u)||!u.type)throw new Error(`${o}'s rule is not found.`);if(void 0!==t[o])c=this.rules[u.type](u,t[o],t);else{if(!1===u.required)continue;c="required"}if(c){let t=r&&r[o]&&r[o][c];switch("string"!=typeof t&&"function"!=typeof t&&(t=this.messages[u.type]&&this.messages[u.type][c]),s||(s={}),typeof t){case"string":s[o]=t;break;case"function":s[o]=t(u);break;default:s[o]=c}}}return s}}const l="0.0.3";export{y as Validator,i as checkArray,r as checkBoolean,a as checkDate,c as checkDateTime,f as checkEnum,m as checkInteger,p as checkNumber,d as checkObject,s as checkString,l as version};
//# sourceMappingURL=validator.esm.min.js.map

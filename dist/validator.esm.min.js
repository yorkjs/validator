function t(t){return Object.prototype.toString.call(t).toLowerCase().slice(8,-1)}function e(e){return"object"===t(e)}function n(e,n){if(!Array.isArray(n))return"type";const{length:r}=n;if(void 0!==e.min&&r<e.min)return"min";if(void 0!==e.max&&r>e.max)return"max";const{itemType:i}=e;if(i)for(let e=0;e<r;e++)if(t(n[e])!==i)return"itemType"}function r(t,e){return"boolean"!=typeof e?"type":void 0!==t.value&&t.value!==e?"value":void 0}function i(t,e){if("string"!=typeof e)return"type";if(""===e){if(!0===t.empty)return;return"empty"}if(void 0!==t.min&&e.length<t.min)return"min";if(void 0!==t.max&&e.length>t.max)return"max";if(void 0!==t.pattern&&!t.pattern.test(e))return"pattern";if(void 0!==t.custom){const n=t.custom(e);if(n)return n}}const s=/^\d{4}\-\d{2}\-\d{2}$/;function o(t,e){const n={};return Object.assign(n,t),Object.assign(n,{type:"string",pattern:s}),i(n,e)}const a=/^\d{4}\-\d{2}\-\d{2} \d{2}:\d{2}:\d{2}$/;function u(t,e){const n={};return Object.assign(n,t),Object.assign(n,{type:"string",pattern:a}),i(n,e)}function c(t,e){if(!Array.isArray(t.values)||t.values.indexOf(e)<0)return"type"}function f(t,e){return"number"!=typeof e||e%1!=0?"type":void 0!==t.min&&e<t.min?"min":void 0!==t.max&&e>t.max?"max":void 0}function m(t,e){return"number"!=typeof e||isNaN(e)?"type":void 0!==t.min&&e<t.min?"min":void 0!==t.max&&e>t.max?"max":void 0}function p(t,n){if(!e(n))return"type"}class y{constructor(){this.rules={int:f,integer:f,number:m,string:i,bool:r,boolean:r,enum:c,array:n,object:p,date:o,dateTime:u},this.messages={}}add(t,n,r){e(t)?(Object.assign(this.rules,t),e(n)&&Object.assign(this.messages,n)):(this.rules[t]=n,this.messages[t]=r)}validate(n,r,i){let s;for(let o in r){const a=r[o];let u,c;switch(t(a)){case"string":u={type:a};break;case"array":u={type:"enum",values:a};break;case"regexp":u={type:"string",pattern:a};break;default:u=a}if(!e(u)||!u.type)throw new Error(`${o}'s rule is not found.`);if(n.hasOwnProperty(o))c=this.rules[u.type](u,n[o],n);else{if(!1===u.required)continue;c="required"}if(c){let t=i&&i[o]&&i[o][c];"string"!=typeof t&&(t=this.messages[u.type]&&this.messages[u.type][c]),s||(s={}),s[o]="string"==typeof t?t:c}}return s}}const d="0.0.1";export{y as Validator,n as checkArray,r as checkBoolean,o as checkDate,u as checkDateTime,c as checkEnum,f as checkInteger,m as checkNumber,p as checkObject,i as checkString,d as version};
//# sourceMappingURL=validator.esm.min.js.map
